# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#POWERLEVEL9K_MODE=
#POWERLEVEL9K_MODE='awesome-fontconfig'
#ZSH_THEME="romkatv/powerlevel10k"
source ~/powerlevel10k/powerlevel10k.zsh-theme
# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="candy"
# ZSH_THEME="alanpeabody"
# ZSH_THEME="gentoo"
# ZSH_THEME="kphoen"
# ZSH_THEME="jreese"
# ZSH_THEME="juanghurtado"
#ZSH_THEME="kafeitu"

# ZSH_THEME="mortalscumbag" # tells when it is ssh
# ZSH_THEME="pygmalion"
# ZSH_THEME="tjkirch"
# ZSH_THEME="xiong-chiamiov-plus"


# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Uncomment this to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want to disable command autocorrection
# DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
#
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git gitfast git-extras debian bundler composer gitfast urltools web-search vi-mode docker docker-compose wd node jsontools gitignore gradle magic-enter)

source $ZSH/oh-my-zsh.sh

# save a ton of history
HISTSIZE=20000
HISTFILE=~/.zsh_history
SAVEHIST=20000

LANG=en_US.utf-8
LANGUAGE=en
CLICOLOR=1 #Colorizes output of ls and others.
EDITOR=vim
VISUAL=$EDITOR
PAGER=less
TERM="screen-256color"
LESS='-R -g -w'

# disable flow control commands (keeps C-s from freezing everything)
stty start undef
stty stop undef

source ~/.dotfiles/shells/rvm.sh
source ~/.dotfiles/shells/configs.sh
source ~/.dotfiles/shells/zsh/functions.zsh
# source ~/.dotfiles/shells/zsh/autosuggestions.zsh

if [ -f ~/.zshrc.local ]; then
  source ~/.zshrc.local
fi

# Always work in a tmux session if tmux is installed
if which tmux 2>&1 >/dev/null; then
  if [ $TERM != "screen-256color"  ] && [ $TERM != "screen"  ]; then
    # tmux attach -t hack || tmux new -s hack; exit
  fi
fi

# disable gnome effects
which ggsettings > /dev/null 2>&1 && set org.gnome.desktop.interface enable-animations false
which rbenv > /dev/null 2>&1 && eval "$(rbenv init - --no-rehash zsh)"

# geekdenz:

# Bind the reverse search to ctrl + R
bindkey -v
bindkey '\e[3~' delete-char
#bindkey '^R' history-incremental-search-backwardl-search-backward

bindkey '^U' backward-kill-line
bindkey '^Y' yank
bindkey ^H vi-backward-word
bindkey ^L vi-forward-word

# nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh"  ] && . "$NVM_DIR/nvm.sh" # This loads nvm
# place this after nvm initialization!
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc
#export NODE_PATH=`which node`
#nvm use stable


#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

# The next line updates PATH for the Google Cloud SDK.
if [ -f $HOME/google-cloud-sdk/path.zsh.inc ]; then
  source "$HOME/google-cloud-sdk/path.zsh.inc"
fi

# The next line enables shell command completion for gcloud.
if [ -f $HOME/google-cloud-sdk/completion.zsh.inc ]; then
  source "$HOME/google-cloud-sdk/completion.zsh.inc"
fi

###-tns-completion-start-###
if [ -f ~/.tnsrc ]; then
    source ~/.tnsrc
fi
###-tns-completion-end-###
export PATH=~/apache-maven/bin:$PATH
export PATH=~/.dotfiles/vim/bundle/phpctags/bin:$PATH

###-tns-completion-start-###
if [ -f /home/denz/.tnsrc ]; then
    source /home/denz/.tnsrc
fi
###-tns-completion-end-###
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/denz/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/denz/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/denz/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/denz/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

if [ -d /home/linuxbrew/.linuxbrew/bin ]; then
	export PATH=$PATH:/home/linuxbrew/.linuxbrew/bin
fi
. ~/.dotfiles/shells/powerline.zshrc

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
alias sail="vendor/bin/sail"
export ANDROID_HOME=$HOME/Android/Sdk
export PATH=$ANDROID_HOME/emulator:$PATH
export PATH=$ANDROID_HOME/platform-tools:$PATH
# eval $(ssh-agent) # do not add this if using KDE wallet to manage keys!
# export PATH=$PATH:~/idea/idea-IU-223.8617.56/bin


# Load Angular CLI autocompletion.
#source <(ng completion script)

export ANDROID_HOME=$HOME/Android/Sdk
export PATH=$ANDROID_HOME/emulator:$PATH
export PATH=$ANDROID_HOME/platform-tools:$PATH
export PATH=$HOME/.local/bin:$PATH
eval $(thefuck --alias)


# pnpm
export PNPM_HOME="/home/tim/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end
